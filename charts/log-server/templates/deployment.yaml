apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: deno-webserver
  name: {{ .Release.Name }}
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.server.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: deno-webserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deno-webserver
    spec:
      containers:
      - image: {{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}
        imagePullPolicy: {{ .Values.server.image.pullPolicy }}
        name: {{ .Release.Name }}
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
            - mountPath: {{ .Values.server.volumes.mountPath }}
              name: {{ .Release.Name }}-{{ .Values.server.volumes.name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
          - name: {{ .Release.Name }}-{{ .Values.server.volumes.name }}
            persistentVolumeClaim:
                 claimName: {{ .Release.Name }}-{{ .Values.server.PVC.name }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ .Values.server.service.name }}
  namespace: default
spec:
  ports:
    - protocol: {{ .Values.server.service.ports.protocol }}
      port: {{ .Values.server.service.ports.port }}
      targetPort: {{ .Values.server.service.ports.targetPort }}
  selector:
    app: deno-webserver
  type: {{ .Values.server.service.type }}
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  allocateLoadBalancerNodePorts: true
  internalTrafficPolicy: Cluster

---

apiVersion: v1
kind: PersistentVolume
metadata:
    name: {{ .Release.Name }}-{{ .Values.server.PV.name }}
spec:
    accessModes:
        - ReadWriteOnce
    persistentVolumeReclaimPolicy: {{ .Values.server.PV.reclaimPolicy }}
    storageClassName: standard
    capacity:
        storage: {{ .Values.server.PV.size }}
    hostPath:
        path: {{ .Values.server.PV.path }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: {{ .Release.Name }}-{{ .Values.server.PVC.name }}
    namespace: default
spec:
    volumeName: {{ .Release.Name }}-{{ .Values.server.PV.name }}
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: {{ .Values.server.PVC.size }}
